"""
    复习
    函数参数
        实参：如何与形参进行对应
            位置实参：顺序            [作用：传递所有形参简单高效]
                序列实参：拆分        [作用：使用容器思想管理实参]
            关键字实参：名字          [作用：通过名字指定个别形参]
                字典实参：拆分       [作用：使用容器思想管理实参]
        形参：约束实参的传递方式
            默认形参：可选           [作用：实参可以不传递]
            位置形参：必填           [作用：实参必须传递]
                星号元组形参：合并    [作用：传递的实参数量可以无限]
            命名关键字形参：必须是关键字实参 [作用：在特定条件下传递的实参通过名字指定代码可读性高]
                双星号字典形参：合并   [作用：传递的实参数量可以无限]
    面向对象
        现实事物  -抽象化->  类  -实例化->  对象
        类和对象
            实例成员： 使用对象访问   对象.？
"""


def func01(p1=0, p2=0, p3=0):
    pass


func01(1, 2, 3)
func01(p2=2)

list01 = [1, 2, 3]
func01(*list01)

dict01 = {"p1": 1, "p2": 2, "p3": 3}
func01(**dict01)


def func02(p1, *, a=0, b=0):
    pass


func02("p", a=1, b=2)
func02("p", a=1)

print(1, 2, 3, sep="-")


def func01(*args):# 将实参合并为一个元组
    print(args)# (34, 4, 5, 67, 7)

list01 = [34, 4, 5, 67, 7]# for  while
func01(*list01)# 将列表拆分后与形参按顺序对应
