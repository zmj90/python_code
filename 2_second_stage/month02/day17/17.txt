前情回顾:

1. ftp文件服务

   请求和应答模型

2. IO 模型

   什么是IO --> 输入输出 ---> 对数据的读写行为

   特点:  不怎么占用cpu
          容易出现阻塞
          IO操作耗时较长
          每个IO对象都有一个整数编号(>=0)  fileno()

3. IO模型变化

    阻塞IO

    非阻塞IO

        setblocking()
        settimeout()

4. IO 多路复用

    多个IO哪个能执行就操作哪个

     * 避免一个IO阻塞造成所有程序都无法执行


     select()

     poll()


三种IO多路复用方法:  select  支持平台最多       监控数量少  效率一般
                  poll    支持Linux unix    监控数量多  效率一般
                  epoll   支持平台少Linux    监控数量多  效率更高


练习: 编写一个程序,将index.html这个网页通过浏览器访问并且展示


web 服务器程序

主要功能 ：
【1】 接收客户端（浏览器）请求

【2】 解析客户端发送的请求

【3】 根据请求组织数据内容

【4】 将数据内容形成http响应格式返回给浏览器

特点 ：
【1】 采用IO并发，可以满足多个客户端同时发起请求情况

【2】 通过类接口形式进行功能封装

【3】 做基本的请求解析，根据具体请求返回具体内容，同时处理客户端的非网页请求行为


1. 功能分析

   实现 请求解析, 响应组织,响应发送

2. 技术分析

   网络 : TCP套接字

   并发模型 : IO多路服用  select 方法

   http协议请求响应格式

3. 封装模型  类封装

   封装接口的设计 :
      1. 使用者需要什么功能
      2. 有什么是能够替使用者完成的
      3. 有什么是需要使用者提供的 (需要使用者在使用我的类时以某种形式传递给我)



4. 协议设定  http协议

5. 代码实现

    * 整体结构
    * 搭建select IO并发服务
    * http功能实现



6. 细节处理


网络并发编程回顾

理论内容 :   1. osi七层模型  tcp/ip模型
           2.  tcp和udp差别
           3.  什么是进程,进程相关概念(进程状态,僵尸进程)
           4.  进程与线程的区别联系
           5.  IO模型的种类和特征
           6.  http协议相关的请求响应过程,请求响应格式,请求类型和响应码
           7.  GIL,同步互斥,IO程序和计算程序的特点

程序部分 : 1. tcp套接字编程
          2. udp套接字编程
          3. 创建进程
          4. 创建线程
          5. 掌握一定的同步互斥方法使用
          6. 搭建多进程 线程的网络并发模型
          7. 至少能够使用一种IO多路服用方法搭建网络模型

综合掌握 :  1. 聊天室    (总分模式, 通信协议的设计)
           2. ftp文件服务  (请求应答的流程模式)
           3. webserver  (如何进行封装类的功能设计)


作业 : 1. http结构再熟悉一遍
      2. webserver代码读通 写一下
      3. 进入 github.com 注册一个账号



















